FILE
  PascalPsiElement(PROGRAM_HEADER)
    PsiElement(PascalTokenType.PROGRAM)('program')
    PsiWhiteSpace(' ')
    PsiElement(PascalTokenType.ID)('whileLoop')
    PsiElement(PascalTokenType.SEMICOLON)(';')
  PsiWhiteSpace('\n\n')
  PascalBlock(BLOCK)
    PascalBlockDeclarationPart(BLOCK_DECLARATION_PART)
      PascalVariableDeclarationPart(VARIABLE_DECLARATIONS)
        PsiElement(PascalTokenType.VAR)('var')
        PsiWhiteSpace(' ')
        PascalVariableDeclaration(VARIABLE_DECLARATION)
          PsiElement(PascalTokenType.ID)('x')
          PsiElement(PascalTokenType.COLON)(':')
          PsiWhiteSpace(' ')
          PascalTypeRef(TYPE_REFERENCE)
            PsiElement(PascalTokenType.ID)('Integer')
        PsiElement(PascalTokenType.SEMICOLON)(';')
    PsiWhiteSpace('\n\n')
    PascalBlockStatementPart(BLOCK_STATEMENT_PART)
      PascalPsiElement(COMPOUND_STATEMENT)
        PsiElement(PascalTokenType.BEGIN)('begin')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('x')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
            PsiElement(PascalTokenType.UNSIGNED_INT)('0')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(WHILE_LOOP)
          PsiElement(PascalTokenType.WHILE)('while')
          PsiWhiteSpace(' ')
          PascalPsiElement(CONDITION)
            PascalBinaryExpression(BINARY_EXPRESSION)
              PascalVariableAccess(VARIABLE_REFERENCE)
                PsiElement(PascalTokenType.ID)('x')
              PsiWhiteSpace(' ')
              PascalPsiElement(OPERATION_REFERENCE)
                PsiElement(PascalTokenType.NEQ)('<>')
              PsiWhiteSpace(' ')
              PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                PsiElement(PascalTokenType.UNSIGNED_INT)('10')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_BODY)
            PsiElement(PascalTokenType.DO)('do')
            PsiWhiteSpace(' ')
            PascalPsiElement(COMPOUND_STATEMENT)
              PsiElement(PascalTokenType.BEGIN)('begin')
              PsiWhiteSpace('\n        ')
              PascalPsiElement(ASSIGNMENT)
                PascalVariableAccess(VARIABLE_REFERENCE)
                  PsiElement(PascalTokenType.ID)('x')
                PsiWhiteSpace(' ')
                PsiElement(PascalTokenType.ASSIGN)(':=')
                PsiWhiteSpace(' ')
                PascalBinaryExpression(BINARY_EXPRESSION)
                  PascalVariableAccess(VARIABLE_REFERENCE)
                    PsiElement(PascalTokenType.ID)('x')
                  PsiWhiteSpace(' ')
                  PascalPsiElement(OPERATION_REFERENCE)
                    PsiElement(PascalTokenType.PLUS)('+')
                  PsiWhiteSpace(' ')
                  PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                    PsiElement(PascalTokenType.UNSIGNED_INT)('1')
              PsiElement(PascalTokenType.SEMICOLON)(';')
              PsiWhiteSpace('\n        ')
              PascalCallExpression(CALL_EXPRESSION)
                PsiElement(PascalTokenType.ID)('WriteLn')
                PascalArgumentList(ARGUMENT_LIST)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalVariableAccess(VARIABLE_REFERENCE)
                    PsiElement(PascalTokenType.ID)('x')
                  PsiElement(PascalTokenType.RPAREN)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(PascalTokenType.END)('end')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n')
        PsiElement(PascalTokenType.END)('end')
  PsiElement(PascalTokenType.DOT)('.')