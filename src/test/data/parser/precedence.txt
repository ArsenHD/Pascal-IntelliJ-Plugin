FILE
  PascalPsiElement(PROGRAM_HEADER)
    PsiElement(PascalTokenType.PROGRAM)('program')
    PsiWhiteSpace(' ')
    PsiElement(PascalTokenType.ID)('precedence')
    PsiElement(PascalTokenType.SEMICOLON)(';')
  PsiWhiteSpace('\n\n')
  PascalBlock(BLOCK)
    PascalBlockDeclarationPart(BLOCK_DECLARATION_PART)
      PascalVariableDeclarationPart(VARIABLE_DECLARATIONS)
        PsiElement(PascalTokenType.VAR)('var')
        PsiWhiteSpace(' ')
        PascalVariableDeclaration(VARIABLE_DECLARATION)
          PsiElement(PascalTokenType.ID)('b')
          PsiElement(PascalTokenType.COLON)(':')
          PsiWhiteSpace(' ')
          PascalTypeRef(TYPE_REFERENCE)
            PsiElement(PascalTokenType.ID)('Boolean')
        PsiElement(PascalTokenType.SEMICOLON)(';')
    PsiWhiteSpace('\n')
    PascalBlockStatementPart(BLOCK_STATEMENT_PART)
      PascalPsiElement(COMPOUND_STATEMENT)
        PsiElement(PascalTokenType.BEGIN)('begin')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalBinaryExpression(BINARY_EXPRESSION)
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
            PsiWhiteSpace(' ')
            PascalPsiElement(OPERATION_REFERENCE)
              PsiElement(PascalTokenType.EQ)('=')
            PsiWhiteSpace(' ')
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalBinaryExpression(BINARY_EXPRESSION)
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
            PsiWhiteSpace(' ')
            PascalPsiElement(OPERATION_REFERENCE)
              PsiElement(PascalTokenType.NEQ)('<>')
            PsiWhiteSpace(' ')
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('2')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalBinaryExpression(BINARY_EXPRESSION)
            PascalPsiElement(PARENTHESIZED)
              PsiElement(PascalTokenType.LPAREN)('(')
              PascalBinaryExpression(BINARY_EXPRESSION)
                PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                  PsiElement(PascalTokenType.UNSIGNED_INT)('1')
                PsiWhiteSpace(' ')
                PascalPsiElement(OPERATION_REFERENCE)
                  PsiElement(PascalTokenType.PLUS)('+')
                PsiWhiteSpace(' ')
                PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                  PsiElement(PascalTokenType.UNSIGNED_INT)('1')
              PsiElement(PascalTokenType.RPAREN)(')')
            PsiWhiteSpace(' ')
            PascalPsiElement(OPERATION_REFERENCE)
              PsiElement(PascalTokenType.EQ)('=')
            PsiWhiteSpace(' ')
            PascalPsiElement(PARENTHESIZED)
              PsiElement(PascalTokenType.LPAREN)('(')
              PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                PsiElement(PascalTokenType.UNSIGNED_INT)('2')
              PsiElement(PascalTokenType.RPAREN)(')')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalBinaryExpression(BINARY_EXPRESSION)
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
            PsiWhiteSpace(' ')
            PascalPsiElement(OPERATION_REFERENCE)
              PsiElement(PascalTokenType.PLUS)('+')
            PsiWhiteSpace(' ')
            PascalBinaryExpression(BINARY_EXPRESSION)
              PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                PsiElement(PascalTokenType.UNSIGNED_INT)('2')
              PsiWhiteSpace(' ')
              PascalPsiElement(OPERATION_REFERENCE)
                PsiElement(PascalTokenType.MULT)('*')
              PsiWhiteSpace(' ')
              PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                PsiElement(PascalTokenType.UNSIGNED_INT)('3')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n    ')
        PascalPsiElement(ASSIGNMENT)
          PascalVariableAccess(VARIABLE_REFERENCE)
            PsiElement(PascalTokenType.ID)('b')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalBinaryExpression(BINARY_EXPRESSION)
            PascalBinaryExpression(BINARY_EXPRESSION)
              PascalPrefixExpression(PREFIX_EXPRESSION)
                PascalPsiElement(OPERATION_REFERENCE)
                  PsiElement(PascalTokenType.NOT)('not')
                PsiWhiteSpace(' ')
                PascalTrueConstant(TRUE_CONSTANT)
                  PsiElement(PascalTokenType.TRUE)('True')
              PsiWhiteSpace(' ')
              PascalPsiElement(OPERATION_REFERENCE)
                PsiElement(PascalTokenType.AND)('and')
              PsiWhiteSpace(' ')
              PascalFalseConstant(FALSE_CONSTANT)
                PsiElement(PascalTokenType.FALSE)('False')
            PsiWhiteSpace(' ')
            PascalPsiElement(OPERATION_REFERENCE)
              PsiElement(PascalTokenType.OR)('or')
            PsiWhiteSpace(' ')
            PascalBinaryExpression(BINARY_EXPRESSION)
              PascalTrueConstant(TRUE_CONSTANT)
                PsiElement(PascalTokenType.TRUE)('True')
              PsiWhiteSpace(' ')
              PascalPsiElement(OPERATION_REFERENCE)
                PsiElement(PascalTokenType.AND)('and')
              PsiWhiteSpace(' ')
              PascalTrueConstant(TRUE_CONSTANT)
                PsiElement(PascalTokenType.TRUE)('True')
        PsiWhiteSpace('\n')
        PsiElement(PascalTokenType.END)('end')
  PsiElement(PascalTokenType.DOT)('.')