FILE
  PascalPsiElement(PROGRAM_HEADER)
    PsiElement(PascalTokenType.PROGRAM)('program')
    PsiWhiteSpace(' ')
    PsiElement(PascalTokenType.ID)('forLoop')
    PsiElement(PascalTokenType.SEMICOLON)(';')
  PsiWhiteSpace('\n\n')
  PascalBlock(BLOCK)
    PascalBlockDeclarationPart(BLOCK_DECLARATION_PART)
      <empty list>
    PascalBlockStatementPart(BLOCK_STATEMENT_PART)
      PascalPsiElement(COMPOUND_STATEMENT)
        PsiElement(PascalTokenType.BEGIN)('begin')
        PsiWhiteSpace('\n    ')
        PascalForLoop(FOR_LOOP)
          PsiElement(PascalTokenType.FOR)('for')
          PsiWhiteSpace(' ')
          PascalForLoopControlVariable(CONTROL_VARIABLE)
            PsiElement(PascalTokenType.ID)('i')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_RANGE)
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
            PsiWhiteSpace(' ')
            PsiElement(PascalTokenType.TO)('to')
            PsiWhiteSpace(' ')
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('10')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_BODY)
            PsiElement(PascalTokenType.DO)('do')
            PsiWhiteSpace('\n        ')
            PascalCallExpression(CALL_EXPRESSION)
              PsiElement(PascalTokenType.ID)('WriteLn')
              PascalArgumentList(ARGUMENT_LIST)
                PsiElement(PascalTokenType.LPAREN)('(')
                PascalVariableAccess(VARIABLE_REFERENCE)
                  PsiElement(PascalTokenType.ID)('i')
                PsiElement(PascalTokenType.RPAREN)(')')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n\n    ')
        PascalForLoop(FOR_LOOP)
          PsiElement(PascalTokenType.FOR)('for')
          PsiWhiteSpace(' ')
          PascalForLoopControlVariable(CONTROL_VARIABLE)
            PsiElement(PascalTokenType.ID)('i')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_RANGE)
            PascalPrefixExpression(PREFIX_EXPRESSION)
              PascalPsiElement(OPERATION_REFERENCE)
                PsiElement(PascalTokenType.MINUS)('-')
              PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
                PsiElement(PascalTokenType.UNSIGNED_INT)('10')
            PsiWhiteSpace(' ')
            PsiElement(PascalTokenType.TO)('to')
            PsiWhiteSpace(' ')
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('10')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_BODY)
            PsiElement(PascalTokenType.DO)('do')
            PsiWhiteSpace(' ')
            PascalPsiElement(COMPOUND_STATEMENT)
              PsiElement(PascalTokenType.BEGIN)('begin')
              PsiWhiteSpace('\n        ')
              PascalCallExpression(CALL_EXPRESSION)
                PsiElement(PascalTokenType.ID)('WriteLn')
                PascalArgumentList(ARGUMENT_LIST)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalBinaryExpression(BINARY_EXPRESSION)
                    PascalVariableAccess(VARIABLE_REFERENCE)
                      PsiElement(PascalTokenType.ID)('i')
                    PsiWhiteSpace(' ')
                    PascalPsiElement(OPERATION_REFERENCE)
                      PsiElement(PascalTokenType.MULT)('*')
                    PsiWhiteSpace(' ')
                    PascalVariableAccess(VARIABLE_REFERENCE)
                      PsiElement(PascalTokenType.ID)('i')
                  PsiElement(PascalTokenType.RPAREN)(')')
              PsiElement(PascalTokenType.SEMICOLON)(';')
              PsiWhiteSpace('\n        ')
              PascalCallExpression(CALL_EXPRESSION)
                PsiElement(PascalTokenType.ID)('WriteLn')
                PascalArgumentList(ARGUMENT_LIST)
                  PsiElement(PascalTokenType.LPAREN)('(')
                  PascalBinaryExpression(BINARY_EXPRESSION)
                    PascalVariableAccess(VARIABLE_REFERENCE)
                      PsiElement(PascalTokenType.ID)('i')
                    PsiWhiteSpace(' ')
                    PascalPsiElement(OPERATION_REFERENCE)
                      PsiElement(PascalTokenType.PLUS)('+')
                    PsiWhiteSpace(' ')
                    PascalVariableAccess(VARIABLE_REFERENCE)
                      PsiElement(PascalTokenType.ID)('i')
                  PsiElement(PascalTokenType.RPAREN)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(PascalTokenType.END)('end')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n\n    ')
        PascalForLoop(FOR_LOOP)
          PsiElement(PascalTokenType.FOR)('for')
          PsiWhiteSpace(' ')
          PascalForLoopControlVariable(CONTROL_VARIABLE)
            PsiElement(PascalTokenType.ID)('i')
          PsiWhiteSpace(' ')
          PsiElement(PascalTokenType.ASSIGN)(':=')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_RANGE)
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('100')
            PsiWhiteSpace(' ')
            PsiElement(PascalTokenType.DOWNTO)('downto')
            PsiWhiteSpace(' ')
            PascalUnsignedIntNumber(UNSIGNED_INT_NUMBER)
              PsiElement(PascalTokenType.UNSIGNED_INT)('1')
          PsiWhiteSpace(' ')
          PascalPsiElement(LOOP_BODY)
            PsiElement(PascalTokenType.DO)('do')
            PsiWhiteSpace('\n        ')
            PascalCallExpression(CALL_EXPRESSION)
              PsiElement(PascalTokenType.ID)('WriteLn')
              PascalArgumentList(ARGUMENT_LIST)
                PsiElement(PascalTokenType.LPAREN)('(')
                PascalVariableAccess(VARIABLE_REFERENCE)
                  PsiElement(PascalTokenType.ID)('i')
                PsiElement(PascalTokenType.RPAREN)(')')
        PsiElement(PascalTokenType.SEMICOLON)(';')
        PsiWhiteSpace('\n')
        PsiElement(PascalTokenType.END)('end')
  PsiElement(PascalTokenType.DOT)('.')